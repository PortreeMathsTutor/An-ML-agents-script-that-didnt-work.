using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using MLAgents;

public class XZAgent : Agent
{
    public float speed = 10f;
    public Rigidbody agentRB;
    public Rigidbody playerRB;
    public Transform hole;
    public Transform agent;
    public Transform player;

    public override void AgentReset()
    {
     
        if (Vector3.Distance(hole.position, agent.position) < 1.6f)
        {
            this.playerRB.velocity = Vector3.zero;
            this.agentRB.velocity = Vector3.zero;
            this.transform.position = new Vector3(Mathf.Sin(Time.time) * 3.5f, 0.0f, Mathf.Cos(Time.time) * 3.5f);
            player.position = new Vector3(Mathf.Cos(Time.time) * 3.5f, 0.0f, Mathf.Sin(Time.time) * 3.5f);
        }
        if (Vector3.Distance(hole.position, player.position) < 1.6f)
        {
            this.playerRB.velocity = Vector3.zero;
            this.agentRB.velocity = Vector3.zero;
            this.transform.position = new Vector3(14, 0, 0);
            player.position = new Vector3(12, 0, 0);
        }
    }

private List<float> state = new List<float>();
    public override void CollectObservations()
    {
        AddVectorObs(agent.rotation.x);
        AddVectorObs(agent.rotation.z);
        AddVectorObs((hole.position.x - player.position.x));
        AddVectorObs((hole.position.z - player.position.z));
        AddVectorObs((hole.position.x - agent.position.x));
        AddVectorObs((hole.position.z - agent.position.z));
        AddVectorObs(agentRB.velocity.x);
        AddVectorObs(agentRB.velocity.z);
    }
 
    public override void AgentAction(float[] vectorAction, string textAction)
    {
        // Actions, size = 2
        Vector3 controlSignal = Vector3.zero;
        controlSignal.x = vectorAction[0];
        controlSignal.z = vectorAction[1];
        agentRB.AddForce(controlSignal * speed);
      

        // Rewards

        float distanceBetweenHoleAndPlaqyer = Vector3.Distance(hole.position,player.position);
        Debug.Log("distanceBetweenHoleAndPlaqyer " + distanceBetweenHoleAndPlaqyer);

        if (distanceBetweenHoleAndPlaqyer < 1.6f)
        {
            SetReward(100f);
        
        }
    
    }
}
